// Generals:

// Font:
// @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@500&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Poppins&display=swap');
$standard-font: 'Segoe UI', Verdana, sans-serif;
$poppins-font: 'Poppins';

// Colors (Used interchangeably  if necessary):
$font-color-1: #FFFFFF;
$font-color-2: #E5E7EB;
$font-color-3: #A6CBE2;
$back-color-1: #CB3C61;
$back-color-2: #4A3163;
$back-color-3: #1F2937;
$back-color-4: #494848;
$back-color-5: #091E22;
$back-color-6: #F3E7D3;
$back-color-7: #6F2DA8;

// Copyright
#copyright {
    margin-right: 3px;
}

body {
    background-color: $font-color-2;
    margin: 0px;
    zoom: 125%;
    max-zoom: 125%;
}

// Disable horizontal sroll (interfers with 'runRight, runLeft animations'
html {
    max-width: 100%;
    overflow-x: hidden;
}

// Footer and header
footer, header, #logo_container, #quotes_container{
    animation: transitionIn 1.0s ease-in-out;
}

#question_container {
    animation: QuestionReappear 2.7s ease-in-out;
}

#answer {
    animation: AnswerReappear 2.7s ease-in-out;
}

// Footer and header
header, footer {
    font-size: 12px;
    font-family: $standard-font;
    position: fixed;
    width: 100%;
    height: 34px;
    background-color: $back-color-1;
    color: $font-color-1;
    display: flex;
    justify-content: center;
    align-items: center;
}

header {
    top: 0;
}

footer {
    bottom: 0;
    background-color: $back-color-3;
}

// Quotes
#quotes_container {
    position: fixed;
    width: 100%;
    bottom: 34px;
    background-color: $back-color-6;
    color: $back-color-3;
    height: 200px;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: background-color 1.5s ease-in-out;
    font-family: $poppins-font;
}

#quotes_container.colorTransition {
    background-color: $back-color-3;
}

// Logo
#logo_container {
    display: flex;
    justify-content: center;
    align-content: center;
    background-color: $back-color-6;
    height: 200px; 
    position: relative;
    top: 33.2px;
    transition: background-color 1.5s ease-in-out;
}

#logo_container.colorTransition {
    background-color: $back-color-1;
}

#logo {
    position: relative;
    bottom: 155px;
    margin: none;
}

// Questions and answers


#answer_container, #question_container {
    display: flex;
    align-items: center;
    position: relative;    
}

#answer_container {
    display: flex;
    justify-content: space-evenly;
    top: 140px;
}

#question_container {
    justify-content: center;
    top: 100px;
    // bottom: 0;
}

#answer, #question {
    color: $back-color-3;
    background-color: $back-color-6;
    font-size: 14px;
    font-family: $standard-font;
    font-weight: bold;
    border-radius: 12px;
    padding: 5px;
    display: flex;
    justify-content: center;
    align-items: center;
}

#answer {
    height: 45px;
    width: 130px;
    border: solid $back-color-3 2px;
    border-width: 4px;
}

#question {
    height: 55px;
    width: 190px;
    border: solid $back-color-1 2px;
    border-width: 4px;
}

// Animations:
// Dissapear/Reappear effects
@keyframes QuestionReappear {
    0% {
        transform: translateY(0%);
        opacity: 0%;
    }
    50% {
        transform: translateY(-88%);
        opacity: 0%;
    }
    100% {
        transform: translateY(0%);
        opacity: 100%;
    }
}

@keyframes AnswerReappear {
    0% {
        transform: translateY(0%);
        opacity: 0%;
    }
    50% {
        transform: translateY(105%);
        opacity: 0%;
    }
    100% {
        transform: translateY(0%);
        opacity: 100%;
    }
}

// Reload page effect
@keyframes transitionIn {
    from {
        opacity: 0;
        transform: rotateX(10deg);
    }
    to {
        opacity: 1;
        transform: rotateX(0);
    }
}

// 'Run' effects
@keyframes runRight {
    from {
        transform: translateX(0%);
    }
    to {
        transform: translateX(600%);
    }
}

@keyframes runLeft {
    from {
        transform: translateX(0%);
    }
    to {
        transform: translateX(-400%);
    }
}

// 'Colorize' effects
@keyframes Question-colorize {
    from {
        background-color: $back-color-6;
        color: $back-color-3;
    }
    to {
        background-color: $back-color-7;
        color: $back-color-7;
        border-color: $back-color-7;
        //Maybe
        // background-color: $back-color-6;
        // color: $back-color-1;
        // border-color: $back-color-3;
    }
}

@keyframes Answer-colorize {
    from {
        background-color: $back-color-6;
        color: $back-color-3;
    }
    to {
        background-color: $back-color-7;
        border-color: $back-color-7;
        color: $back-color-7;
        //Maybe
        // background-color: $back-color-3;
        // border-color: $back-color-1;
    }
}

// Media Queries

// Smaller screens 
@media only screen and (max-device-height: 1000px) {
    #app {
        position: relative;
        bottom: 50px;
    }
        
    #quotes_container {
        bottom: -80px;
    }

    #question {
        position: relative;
        top: 45px;
    }

    #quotes {
        position: relative;
        bottom: 50px;
    }

    #answer_container {
        top: 165px;
    }
}
 

// Flex:
// align-items (vertically) - reverse when flex-direction is a column
// justify-content (horizontally) - reverse when flex-direction is a column
// flex-direction - defines the direction the items are placed in
// order - we can decide the oder of the items ourselves, by default, each has a value of '0'
// align-self - can be applied to individual items, accepts the same values as 'align-items' and its value for the specific item
// flex-wrap - spread items around: 
//                                  a) nowrap: every items is fit to a single line
//                                  b) wrap: items wrap around to additional lines
//                                  c) wrap-reverse: items wrap around to additional lines in reverse 
// flex-direction and flex-wrap => flex-flow (as they are used so often together). Accepts the values of both properties separated by a space:
// eg: flex-flow: row wrap = set rows and wrap them
// align-content: determines the spaceing between lines (when there's only one line, it has no effect).
